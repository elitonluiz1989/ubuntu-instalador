#!/usr/bin/env bash
clear

menu() {
	FOLDER=$HOME/.ubuntu-instalador

	if [ -z "${1}" ]; then
		echo "Escolha a opção:";
		echo "1 - Instalar programas pós-instalação de sistema."
		echo "2 - Instalar um programa"
		echo "3 - Atualizar sistemas"
		echo "4 - Sair"

		read opcao;
	else
		opcao=$1
	fi

	case $opcao in
		1) posInstalacao ;;
		2) instalarPrograma ;;
		3) atualizarSistema ;;
		4) exit ;;
		*) echo "Opcao desconhecida."; menu ;;
	esac
}

addicionarPPA() {
	# Remove palavras indesejadas
	ppaAtual=$(echo $1 | sed -e "s/\/ppa//g" -e "s/\/stable//g" -e "s/\-stable//g")
	# Verifica se o ppa esta subdividido por /
	if [[ "${ppaAtual}" =~ "/" ]]; then
		# Separa a subdivisao em dois parametros
		ppaAtual=$(echo $ppaAtual | sed -n 's/\(.*\)\/\(.*\)/\1.*\2/p')
	fi

	ppaInstalado=$(find /etc/apt/sources.list.d/ -type f -regextype posix-extended -regex ".*$ppaAtual.*.list$")
	[ -z "${ppaInstalado}" ] && sudo apt-add-repository -y ppa:${1}
}

posInstalacao() {
	# Pega lista de PPAs contida no arquivo ppas
	mapfile ppas < $FOLDER/ppas

	# Verificando se ha necessidade de instala-los
	echo "------ PPAs ------"
	echo "--> Verificando PPAs."
	for ppa in "${ppas[@]}"; do
		addicionarPPA "${ppa}"
	done

	# Depois de verificado os PPAs atualiza o sistema
	atualizarSistema

	echo "--> Instalando os programas."
	# Cria um ARRAY com os conteiners de tipos de programas
	arqs=$(find $FOLDER/programas -type f)
	arqs=$( echo $arqs | sed -e 's/ /;/g')

	tiposProgs=${arqs//;/ }

	for tipo in "${tiposProgs[@]}"; do
		if [ -f $FOLDER/programas/$tipo ]; then
			titulo=$(echo $tipo | sed -e 's/\(.\)/\U\1/')
			echo "------ ${titulo} ------"

			# Quebra as linhas do arquivo em um ARRAY para caso de varias instrucoes
			mapfile instrucoes < $FOLDER/programas/$tipo

			for instrucao in "${instrucoes[@]}"; do
				# Executa cada instrucao
				${instrucao}
			done

			if [[ "${tipo}" == "temas" ]]; then
				[[ $(ls /usr/share/themes/Numix/unity/launcher_* 2> /dev/null | wc -l ) -gt 0 ]] && (sudo rm -v /usr/share/themes/Numix/unity/launcher_*; exit 1)
			fi
		fi
	done

	echo "--> Removendo o lixo."
	sudo apt-get autoclean -y
	sudo apt-get autoremove -y
	echo "---------------------"
	echo "--> Terminado!"
}

instalarPrograma() {
	if [ "$1" != "semPPA" ]; then
		echo "--> Instalar progrma com PPA? (s/N)"
		read comPPA

		if [ "${comPPA}" == "s" ]; then
			echo "Informe o PPA:"
			read ppa

			ppa=$(echo $ppa | sed -n 's/\(.*\):\(.*\)/\2/p')

			[ ! -z "${ppa}" ] && addicionarPPA $ppa

			sudo apt-get update
		fi
	fi

	echo "--> Informe o nome do programa:"
	read programa

	if [ -z "${programa}" ]; then
		echo "--> Erro: programa não informado!"
		echo "-> Deseja redigitar? S/n"
		read reiniciar

		reiniciar=$(echo $reiniciar || sed -e 's/\(.\)/\L\1/')
		if [ -z "${reiniciar}" ] || [ "${reiniciar}" == "s" ]; then
			instalarPrograma "semPPA"
		else
			echo "--> Deseja voltar para o menu inicial? (S=sim/N=sair)"
			read opcao

			opcao=$(echo $opcao | sed -e 's/\(.\)/\L\1/')
			if [ -z "${opcao}" ] || [ "${opcao}" == "s" ]; then
				menu
			else
				echo "---> Até mais!"
				exit;
			fi
		fi
	else
		sudo apt-get install -y ${programa}
	fi
}

atualizarSistema() {
	echo "--> Atualizando o sistema."

	sudo apt-get update
	sudo apt-get upgrade -y
	sudo apt-get dist-upgrade -y
	sudo apt-get autoclean -y
	sudo apt-get autoremove -y

	# Verifica se o tema Numix recebeu uma atualizacao
	# Se sim remove alguns icones que nao gosto no Unity'
	data=$(date +"%Y-%m-%d")
	data=$(echo $data | sed 's/\-/\\-/g')
	histAtualizacao=$(< /var/log/apt/history.log)
	atualizacaoRecente=$(echo $histAtualizacao | sed "s/.*Start\-Date:\ ${data}\(.*\)./\1/p")

	numixAtualizou=$(grep -o "numix" <<< "$atualizacaoRecente" | wc -l);

	if [[ "${numixAtualizou}" -gt 0 ]] && [[  $(ls /usr/share/themes/Numix/unity/launcher_* 2> /dev/null | wc -l ) -gt 0 ]]; then
		sudo rm -v /usr/share/themes/Numix/unity/launcher_*
	fi
}

# Inicia o programa invocando o menu
menu $1
exit
